@{
    ViewData["Title"] = "Manage Roles";
}

@model SDP.ViewModels.ManageRoleModel

<section id="section-cms">
    <div class="container">
        @await Html.PartialAsync("_AdminLinks")
        <section class="cms-area">

            <h2>@ViewData["Title"]</h2>
            @*<h1 style="color:red">@ViewData["Error MSG"]</h1>*@ @* Is this used? *@

            <form asp-action="RoleManage" asp-controller="Account" method="post">
                <label for="email" class="form-label">User Email</label>
                <div class="form-text mt-0 mb-2">Please enter the email for the user you wish to modify and press 'Find User'.</div>
                <div class="input-group">
                    <input id="email" name="Email" class="form-control" />
                    <button class="btn btn-primary" type="submit">Find User</button>
                </div>
            </form>

            @if (Model.user != null)
            {
                <h3>User Found</h3>
                <form asp-action="DeleteUserRole" asp-controller="Account" method="post" id="popup">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Email</th>
                                <th>ID</th>
                            </tr>
                        </thead>
                        <tr>
                            <td>
                                @Model.user.Email
                            </td>
                            <td>
                                @Model.user.Id
                            </td>
                        </tr>
                    </table>

                    <input type="hidden" name="userId" value=@Model.user.Id />

                    <table class="table">
                        <thead>
                            <tr>
                                <th>User Roles</th>
                                <th></th>
                            </tr>
                        </thead>
                        @foreach (var role in Model.currentRoleList)
                        {
                            <tr>
                                <td>
                                    @role.Name
                                </td>
                                <td>
                                    @if (role.Name == "SuperAdmin")
                                    {
                                        <button class="btn btn-sm btn-danger" disabled>Remove Role</button>
                                    }
                                    else
                                    {<button class="btn btn-sm btn-danger" type="submit" name="roleName" value=" @role.Name">Remove Role</button>}
                                </td>
                            </tr>
                        }
                    </table>
                </form>

                <form asp-action="RoleManage" asp-controller="Account" method="post">
                    <div class="input-group">
                        @Html.DropDownListFor(m => m.roleId, new SelectList(Model.roleList, "Value", "Text"), "Add a new role ", new { @class = "form-select" })
                        <input type="hidden" name="searchToken" value="true" />
                        <button class="btn btn-warning" type="submit" name="Id" value="@Model.user.Id">Add Role</button>
                    </div>
                </form>
                <br />
                <form asp-action="DeleteUser" asp-controller="Account" method="post" id="popup">
                    <button class="btn btn-danger" type="submit" name="userId" value="@Model.user.Id">Delete User</button>
                </form>

            }
            @* Would be useful to have an alternative display if the user is not found. *@
        </section>

    </div>
</section>
