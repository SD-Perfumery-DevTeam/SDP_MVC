@{
    ViewData["Title"] = "All Products";
}
@model SDP.ViewModels.Catalog
<!-- Product Display ====================================================== -->
<div class="container">
    <section id="section-banner">
        <h2>@ViewData["Title"]</h2>
        <p>Sort</p>
        <div class="sort">
            <select class="sdp-style" onchange="sortBy(this);" style="margin: 0 0 1.5rem 1rem;">
                <option>View By</option>
                <option value="priceL-H">Price: Highest to Lowest</option>
                <option value="priceH-L">Price: Lowest to Highest</option>
                <option value="nameA-Z">Product Name: A - Z</option>
                <option value="nameZ-A">Product Name: Z - A</option>
            </select>
        </div>
        <p>Filter</p>
        <div style="margin-left: 1rem; display:grid; grid-template-columns:repeat(auto-fit, minmax(180px, 1fr));">
            @foreach (var brand in Model.brands)
            {
                <label style="margin-right: 0.5rem;"><input type="checkbox" name="brand" id="@brand.title" value="@brand.title" /> @brand.title</label>
            }
        </div>
        <button class="sdp-style" type="button" onclick="reDisplay()" style="margin: 1rem;">Apply filter</button>
    </section>
</div>

<section id="section-product-list">
    <div class="container product_con">
        
        

        @using (Html.BeginForm("ProductDisplay", "Product"))
        {
            <div class="row rowone flex-box" id="product-list"></div>
        }

        @* These may be better displayed as links? Buttons currently do not indicate current page. *@
        @using (Html.BeginForm("Index", "Product"))
        {
            <div class="page-numbers">
                @for (int i = 0; i < Model.totalPage; i++)
                {
                    int pageNum = i + 1;
                    <button class="sdp-style" type="submit" name="pageNumber" value=@i> @pageNum </button>
                }
                <button id="btn_prev" class="sdp-style">prev</button> <button id="btn_next" class="sdp-style">next</button>
            </div>
        }
    </div>
</section>

<!-- Recommended Products ================================================= -->
@await Html.PartialAsync("_RecommendedProducts")

<script>
    var productDbJson = @Html.Raw(Json.Serialize(Model.products.ToList()));
</script>


<script src="~/js/sort.js" asp-append-version="true"></script>
@*<script src="~/js/pagination.js" asp-append-version="true"></script>*@


